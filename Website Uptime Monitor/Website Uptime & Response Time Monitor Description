# Website Uptime & Response Time Monitor

This repository contains an n8n workflow that checks the availability and response status of one or more websites on a schedule and sends an email alert when a site is down. It is ideal as a portfolio project demonstrating automation, monitoring, and notification capabilities using open‑source tools.

## Features

* **Scheduled Checks**: Runs every hour (configurable) via the n8n Schedule Trigger.
* **Configurable URL List**: Define one or more website URLs in a JSON field.
* **Parallel Requests**: Splits the list of URLs and issues HTTP GET requests to each.
* **Conditional Logic**: Compares each response’s `statusCode` against 200.
* **Email Alerts**: Sends a Gmail notification when any site returns a non‑200 status.
* **Extensible**: Easily add logging, integrate Slack/Teams, or expand to multiple environments.

## Workflow Overview

1. **Schedule Trigger** (`n8n-nodes-base.scheduleTrigger`)

   * Fires on a defined CRON (e.g. every hour at minute 0).
   * Outputs a timestamp and human‑readable time.

2. **Edit Fields** (`n8n-nodes-base.set`)

   * Manually maps:

     * `urls`: An array of one or more site addresses.
     * `readableTime`: Inherits trigger’s human‑readable time.
   * Passes along all input data for downstream nodes.

3. **Split Out** (`n8n-nodes-base.splitInBatches`)

   * Takes the `urls` array and outputs one URL per execution branch.

4. **HTTP Request** (`n8n-nodes-base.httpRequest`)

   * Performs a GET request against the current `url`.
   * Returns `statusCode`, response headers, and body.

5. **If** (`n8n-nodes-base.if`)

   * Condition: `statusCode` **is not equal to** 200.
   * On **true** (site down): routes to the Gmail node.
   * On **false** (site healthy): no action.

6. **Gmail** (`n8n-nodes-base.gmail`)

   * Sends an email to a configured address.
   * Subject: `⚠️ Uptime Alert: <url>`
   * Body: `Your site <url> returned status <code> at <time>.`

## Getting Started

### Prerequisites

* [n8n](https://n8n.io) self‑hosted or cloud account
* Node executing environment
* Google account with Gmail API credentials

### Setup

1. **Import Workflow**

   * Copy `Website_Uptime_Monitor.json` into your n8n `workflows` directory or import via the UI.

2. **Configure Credentials**

   * In n8n UI, create a Gmail OAuth2 credential.
   * Grant send‑mail scope.

3. **Customize URLs**

   * Edit the Set/Edit Fields node and replace the example `urls` array with your own site(s).

4. **Activate Workflow**

   * Toggle the workflow to **Active**.
   * Run a manual test via **Test Workflow** to verify email delivery.

### Deployment

* Commit the JSON file to this GitHub repo.
* Configure n8n to auto‑reload workflows from the `/workflows` folder on startup.
* (Optional) Use Docker Compose or Kubernetes for high availability.

## Extending the Workflow

* **Slack/Teams Alerts**: Replace or supplement the Gmail node.
* **Response Time Measurement**: Capture `responseTime` from HTTP node
* **CSV/Database Logging**: Append each result to a Google Sheet or SQL table.
* **Status Dashboard**: Integrate with Grafana or n8n UI Variables.

---

*Generated by n8n — Website Uptime & Response Time Monitor*
